{
  "json.schemaDownload.enable": true,
  "files.associations": {
    "*.css": "tailwindcss",
    "*.pcss": "tailwindcss",
    "*.postcss": "tailwindcss",
    "*.less": "tailwindcss",
    "*.sass": "tailwindcss",
    "*.scss": "tailwindcss",
    "*.stylus": "tailwindcss",
    "*.sugarss": "tailwindcss",
    "*.tailwindcss": "tailwindcss",
    "*.svelte": "svelte",
    "*.html": "html"
  },
  // To convert existing indentation from spaces to tabs hit Ctrl+Shift+P and type:
  // >Convert indentation to Spaces
  // The number of spaces a tab is equal to. 
  "editor.tabSize": 2,
  // Insert spaces when pressing Tab.
  "editor.insertSpaces": true,
  // Format a file on save. A formatter must be available, the file must not be saved after delay, and the editor must not be shutting down.
  "editor.formatOnSave": true,
  // When opening a file, `editor.tabSize` and `editor.insertSpaces` will be detected based on the file contents.
  "editor.detectIndentation": false,
  // Controls whether the editor should automatically adjust the indentation when users type, paste, move or indent lines.
  "editor.autoIndent": "advanced",
  "editor.quickSuggestions": {
    "other": true,
    "comments": false,
    "strings": true
  },
  // Configure settings to be overridden for the dart language.
  "[dart]": {
    "editor.tabSize": 2,
    "editor.formatOnSave": true,
    "editor.formatOnType": true,
    "editor.rulers": [
      80
    ],
    "editor.suggest.insertMode": "replace",
    "editor.defaultFormatter": "Dart-Code.dart-code",
    "editor.inlayHints.enabled": "offUnlessPressed",
    "editor.selectionHighlight": false,
    "editor.suggest.snippetsPreventQuickSuggestions": false,
    "editor.suggestSelection": "first",
    "editor.tabCompletion": "onlySnippets",
    "editor.wordBasedSuggestions": "off"
  },
  // Configure settings to be overridden for the dockercompose language.
  "[dockercompose]": {
    "editor.insertSpaces": true,
    "editor.tabSize": 2,
    "editor.autoIndent": "advanced",
    "editor.quickSuggestions": {
      "other": true,
      "comments": false,
      "strings": true
    }
  },
  // Configure settings to be overridden for the dockerfile language.
  "[dockerfile]": {
    "editor.quickSuggestions": {
      "strings": true
    }
  },
  // Configure editor settings to be overridden for [html] language.
  "[html]": {
    "editor.tabSize": 2,
    "editor.insertSpaces": true,
    "editor.formatOnSave": true,
    "editor.formatOnType": true,
    "editor.rulers": [
      80
    ],
    "editor.detectIndentation": true,
    "editor.suggest.insertMode": "replace",
    "editor.defaultFormatter": "svelte.svelte-vscode"
  },
  "[json]": {
    "editor.tabSize": 2,
    "editor.insertSpaces": true,
    "editor.formatOnSave": true,
    "editor.formatOnType": true,
    "editor.rulers": [
      80
    ],
    "editor.detectIndentation": false,
    "editor.suggest.insertMode": "replace",
    "editor.defaultFormatter": "vscode.json-language-features"
  },
  "[yml]": {
    "editor.tabSize": 2,
    "editor.insertSpaces": true,
    "editor.formatOnSave": true,
    "editor.formatOnType": true,
    "editor.rulers": [
      80
    ],
    "editor.detectIndentation": false,
    "editor.suggest.insertMode": "replace",
    "editor.defaultFormatter": "svelte.svelte-vscode"
  },
  "[svelte]": {
    "editor.tabSize": 2,
    "editor.insertSpaces": true,
    "editor.formatOnSave": true,
    "editor.formatOnType": true,
    "editor.rulers": [
      80
    ],
    "editor.detectIndentation": false,
    "editor.suggest.insertMode": "replace",
    "editor.defaultFormatter": "svelte.svelte-vscode",
    "editor.inlayHints.enabled": "offUnlessPressed",
    "editor.selectionHighlight": false,
    "editor.suggest.snippetsPreventQuickSuggestions": false,
    "editor.suggestSelection": "first",
    "editor.tabCompletion": "onlySnippets",
    "editor.wordBasedSuggestions": "off"
  },
  "[js]": {
    "editor.tabSize": 2,
    "editor.insertSpaces": true,
    "editor.formatOnSave": true,
    "editor.formatOnType": true,
    "editor.rulers": [
      80
    ],
    "editor.detectIndentation": false,
    "editor.suggest.insertMode": "replace",
    "editor.defaultFormatter": "svelte.svelte-vscode"
  },
  "[cjs]": {
    "editor.tabSize": 2,
    "editor.insertSpaces": true,
    "editor.formatOnSave": true,
    "editor.formatOnType": true,
    "editor.rulers": [
      80
    ],
    "editor.detectIndentation": false,
    "editor.suggest.insertMode": "replace",
    "editor.defaultFormatter": "svelte.svelte-vscode"
  },
  "[ts]": {
    "editor.tabSize": 2,
    "editor.insertSpaces": true,
    "editor.formatOnSave": true,
    "editor.formatOnType": true,
    "editor.rulers": [
      80
    ],
    "editor.detectIndentation": false,
    "editor.suggest.insertMode": "replace",
    "editor.defaultFormatter": "svelte.svelte-vscode"
  },
  "[css]": {
    "editor.tabSize": 2,
    "editor.insertSpaces": true,
    "editor.formatOnSave": true,
    "editor.formatOnType": true,
    "editor.rulers": [
      80
    ],
    "editor.detectIndentation": false,
    "editor.suggest.insertMode": "replace",
    "editor.defaultFormatter": "svelte.svelte-vscode"
  },
  "[less]": {
    "editor.tabSize": 2,
    "editor.insertSpaces": true,
    "editor.formatOnSave": true,
    "editor.formatOnType": true,
    "editor.rulers": [
      80
    ],
    "editor.detectIndentation": false,
    "editor.suggest.insertMode": "replace",
    "editor.defaultFormatter": "svelte.svelte-vscode"
  },
  "[sass]": {
    "editor.tabSize": 2,
    "editor.insertSpaces": true,
    "editor.formatOnSave": true,
    "editor.formatOnType": true,
    "editor.rulers": [
      80
    ],
    "editor.detectIndentation": false,
    "editor.suggest.insertMode": "replace",
    "editor.defaultFormatter": "svelte.svelte-vscode"
  },
  "[scss]": {
    "editor.tabSize": 2,
    "editor.insertSpaces": true,
    "editor.formatOnSave": true,
    "editor.formatOnType": true,
    "editor.rulers": [
      80
    ],
    "editor.detectIndentation": false,
    "editor.suggest.insertMode": "replace",
    "editor.defaultFormatter": "svelte.svelte-vscode"
  },
  "[pcss]": {
    "editor.tabSize": 2,
    "editor.insertSpaces": true,
    "editor.formatOnSave": true,
    "editor.formatOnType": true,
    "editor.rulers": [
      80
    ],
    "editor.detectIndentation": false,
    "editor.suggest.insertMode": "replace",
    "editor.defaultFormatter": "svelte.svelte-vscode"
  },
  "[postcss]": {
    "editor.tabSize": 2,
    "editor.insertSpaces": true,
    "editor.formatOnSave": true,
    "editor.formatOnType": true,
    "editor.rulers": [
      80
    ],
    "editor.detectIndentation": false,
    "editor.suggest.insertMode": "replace",
    "editor.defaultFormatter": "svelte.svelte-vscode"
  },
  "typescript.tsdk": "node_modules/typescript/lib",
  "prettier.documentSelectors": [
		"**/*.svelte"
	],
	"tailwindCSS.classAttributes": [
		"class",
		"accent",
		"active",
		"animIndeterminate",
		"aspectRatio",
		"background",
		"badge",
		"bgBackdrop",
		"bgDark",
		"bgDrawer",
		"bgLight",
		"blur",
		"border",
		"button",
		"buttonAction",
		"buttonBack",
		"buttonClasses",
		"buttonComplete",
		"buttonDismiss",
		"buttonNeutral",
		"buttonNext",
		"buttonPositive",
		"buttonTextCancel",
		"buttonTextConfirm",
		"buttonTextFirst",
		"buttonTextLast",
		"buttonTextNext",
		"buttonTextPrevious",
		"buttonTextSubmit",
		"caretClosed",
		"caretOpen",
		"chips",
		"color",
		"controlSeparator",
		"controlVariant",
		"cursor",
		"display",
		"element",
		"fill",
		"fillDark",
		"fillLight",
		"flex",
		"flexDirection",
		"gap",
		"gridColumns",
		"height",
		"hover",
		"inactive",
		"indent",
		"justify",
		"meter",
		"padding",
		"position",
		"regionAnchor",
		"regionBackdrop",
		"regionBody",
		"regionCaption",
		"regionCaret",
		"regionCell",
		"regionChildren",
		"regionChipList",
		"regionChipWrapper",
		"regionCone",
		"regionContent",
		"regionControl",
		"regionDefault",
		"regionDrawer",
		"regionFoot",
		"regionFootCell",
		"regionFooter",
		"regionHead",
		"regionHeadCell",
		"regionHeader",
		"regionIcon",
		"regionInput",
		"regionInterface",
		"regionInterfaceText",
		"regionLabel",
		"regionLead",
		"regionLegend",
		"regionList",
		"regionListItem",
		"regionNavigation",
		"regionPage",
		"regionPanel",
		"regionRowHeadline",
		"regionRowMain",
		"regionSummary",
		"regionSymbol",
		"regionTab",
		"regionTrail",
		"ring",
		"rounded",
		"select",
		"shadow",
		"slotDefault",
		"slotFooter",
		"slotHeader",
		"slotLead",
		"slotMessage",
		"slotMeta",
		"slotPageContent",
		"slotPageFooter",
		"slotPageHeader",
		"slotSidebarLeft",
		"slotSidebarRight",
		"slotTrail",
		"spacing",
		"text",
		"track",
		"transition",
		"width",
		"zIndex"
	]
}